# Generated by Django 4.2.7 on 2025-09-04 16:30

import ckeditor_uploader.fields
from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIAgentLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_type', models.CharField(choices=[('whatsapp', 'WhatsApp'), ('chatbot', 'Chatbot'), ('order_booking', 'Order Booking'), ('notification', 'Notification')], max_length=20)),
                ('user_identifier', models.CharField(blank=True, max_length=100)),
                ('message_content', models.TextField()),
                ('response_content', models.TextField(blank=True)),
                ('webhook_data', models.JSONField(blank=True, default=dict)),
                ('status', models.CharField(default='processed', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CalendarEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('attendee_name', models.CharField(blank=True, max_length=100)),
                ('attendee_email', models.EmailField(blank=True, max_length=254)),
                ('attendee_phone', models.CharField(blank=True, max_length=20)),
                ('google_event_id', models.CharField(blank=True, max_length=100)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Portfolio Category',
                'verbose_name_plural': 'Portfolio Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PricingPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_period', models.CharField(choices=[('monthly', 'Monthly'), ('yearly', 'Yearly'), ('one_time', 'One Time')], default='monthly', max_length=20)),
                ('features', models.JSONField(default=list)),
                ('is_popular', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('stripe_price_id', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['order', 'price'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('client_name', models.CharField(blank=True, max_length=100)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='project_images/')),
                ('cloudinary_image_id', models.CharField(blank=True, max_length=255, null=True)),
                ('gallery', models.JSONField(blank=True, default=list, help_text='List of image URLs')),
                ('technologies', models.JSONField(blank=True, default=list)),
                ('portfolio_type', models.CharField(choices=[('website', 'Website Portfolio'), ('ai', 'AI Automation'), ('social', 'Social Media Content'), ('other', 'Other')], default='other', max_length=20)),
                ('project_url', models.URLField(blank=True)),
                ('github_url', models.URLField(blank=True)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('on_hold', 'On Hold')], default='completed', max_length=20)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', ckeditor_uploader.fields.RichTextUploadingField()),
                ('short_description', models.CharField(blank=True, max_length=300)),
                ('icon', models.CharField(blank=True, help_text='Font Awesome icon class', max_length=50)),
                ('image', models.ImageField(blank=True, null=True, upload_to='service_images/')),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='Base price in CAD', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('price_type', models.CharField(choices=[('fixed', 'Fixed Price'), ('hourly', 'Per Hour'), ('monthly', 'Per Month'), ('custom', 'Custom Quote'), ('tiered', 'Tiered Pricing')], default='custom', max_length=20)),
                ('features', models.JSONField(blank=True, default=list)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('stripe_price_id', models.CharField(blank=True, max_length=100)),
                ('service_type', models.CharField(choices=[('social_media', 'Social Media'), ('seo', 'SEO'), ('blog', 'Blog'), ('video', 'Video'), ('other', 'Other')], default='other', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='SiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='Social Dots Inc.', max_length=100)),
                ('tagline', models.CharField(blank=True, default='Empowering Canadian businesses to thrive in a constantly evolving digital world', max_length=200)),
                ('logo', models.CharField(blank=True, help_text='Logo file path', max_length=200, null=True)),
                ('logo_dark', models.CharField(blank=True, help_text='Dark version of logo file path', max_length=200, null=True)),
                ('favicon', models.CharField(blank=True, help_text='Favicon file path', max_length=200, null=True)),
                ('phone', models.CharField(blank=True, default='416-556-6961', max_length=20)),
                ('email', models.EmailField(blank=True, default='hello@socialdots.ca', max_length=254)),
                ('contact_email', models.EmailField(blank=True, default='ali@socialdots.ca', help_text='Primary contact email', max_length=254)),
                ('address', models.TextField(blank=True, default='Toronto, Ontario, Canada')),
                ('website_url', models.URLField(blank=True, default='https://socialdots.ca')),
                ('primary_color', models.CharField(default='#2563EB', help_text='Primary Blue color', max_length=7, validators=[django.core.validators.RegexValidator('^#[0-9A-Fa-f]{6}$', 'Enter a valid hex color code')])),
                ('secondary_color', models.CharField(default='#1E40AF', help_text='Secondary Blue color', max_length=7, validators=[django.core.validators.RegexValidator('^#[0-9A-Fa-f]{6}$', 'Enter a valid hex color code')])),
                ('accent_color', models.CharField(default='#3B82F6', help_text='Accent Blue color', max_length=7, validators=[django.core.validators.RegexValidator('^#[0-9A-Fa-f]{6}$', 'Enter a valid hex color code')])),
                ('social_facebook', models.URLField(blank=True)),
                ('social_twitter', models.URLField(blank=True)),
                ('social_linkedin', models.URLField(blank=True)),
                ('social_instagram', models.URLField(blank=True)),
                ('google_analytics_id', models.CharField(blank=True, max_length=50)),
                ('meta_description', models.CharField(blank=True, default='Strategic AI integration and comprehensive digital solutions for Canadian businesses. 15+ years of expertise in Salesforce, marketing automation, and business growth.', max_length=160)),
                ('legal_name', models.CharField(blank=True, default='Social Dots Inc.', max_length=200)),
                ('business_number', models.CharField(blank=True, help_text='Canadian Business Number', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Site Configuration',
                'verbose_name_plural': 'Site Configuration',
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('bio', models.TextField(blank=True)),
                ('image', models.CharField(blank=True, help_text='Team member photo path', max_length=200, null=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('linkedin', models.URLField(blank=True)),
                ('twitter', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=100)),
                ('client_position', models.CharField(blank=True, max_length=100)),
                ('client_company', models.CharField(blank=True, max_length=100)),
                ('client_image', models.CharField(blank=True, help_text='Client photo path', max_length=200, null=True)),
                ('content', models.TextField()),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServicePricingOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('price', models.DecimalField(decimal_places=2, help_text='Price in CAD', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('period', models.CharField(choices=[('one_time', 'One Time'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], default='one_time', max_length=20)),
                ('features', models.JSONField(blank=True, default=list)),
                ('is_popular', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('stripe_price_id', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pricing_options', to='core.service')),
            ],
            options={
                'ordering': ['order', 'price'],
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='portfolio_images/')),
                ('cloudinary_image_id', models.CharField(blank=True, help_text='Cloudinary public ID for the image', max_length=255, null=True)),
                ('content_type', models.CharField(choices=[('post', 'Post'), ('video', 'Video'), ('blog', 'Blog'), ('email', 'Email'), ('technology', 'Technology')], default='post', max_length=20)),
                ('portfolio_type', models.CharField(choices=[('website', 'Website Portfolio'), ('ai', 'AI Automation'), ('social', 'Social Media Content'), ('other', 'Other')], default='other', max_length=20)),
                ('video_url', models.URLField(blank=True, help_text='YouTube video URL')),
                ('blog_link', models.URLField(blank=True, help_text='Link to blog post')),
                ('technology_used', models.JSONField(blank=True, default=list, help_text='List of technologies used')),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolios', to='core.portfoliocategory')),
            ],
            options={
                'verbose_name': 'Portfolio',
                'verbose_name_plural': 'Portfolios',
                'ordering': ['order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=50, unique=True)),
                ('customer_name', models.CharField(max_length=100)),
                ('customer_email', models.EmailField(max_length=254)),
                ('customer_phone', models.CharField(blank=True, max_length=20)),
                ('service_name', models.CharField(max_length=200)),
                ('pricing_plan_name', models.CharField(max_length=200)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='CAD', max_length=3)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('processing', 'Processing'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('stripe_payment_intent_id', models.CharField(blank=True, max_length=100)),
                ('stripe_session_id', models.CharField(blank=True, max_length=100)),
                ('frappe_document_id', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pricing_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='core.pricingplan')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='core.service')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('company', models.CharField(blank=True, max_length=100)),
                ('message', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('new', 'New'), ('contacted', 'Contacted'), ('qualified', 'Qualified'), ('converted', 'Converted'), ('lost', 'Lost')], default='new', max_length=20)),
                ('source', models.CharField(blank=True, help_text='Where the lead came from', max_length=50)),
                ('budget', models.CharField(blank=True, max_length=50)),
                ('timeline', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service_interest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.service')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('excerpt', models.TextField(blank=True, max_length=300)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('featured_image', models.CharField(blank=True, help_text='Blog post featured image path', max_length=200, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('is_featured', models.BooleanField(default=False)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-published_at', '-created_at'],
            },
        ),
    ]
