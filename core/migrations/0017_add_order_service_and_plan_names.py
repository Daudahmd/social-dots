# Generated by Django 4.2.7 on 2025-07-18 16:00

from django.db import migrations, models
from django.db.utils import ProgrammingError


def check_column_exists(apps, schema_editor, table, column):
    """Check if a column exists in a table"""
    try:
        with schema_editor.connection.cursor() as cursor:
            cursor.execute(
                "SELECT 1 FROM information_schema.columns WHERE table_name = %s AND column_name = %s",
                [table, column]
            )
            return bool(cursor.fetchone())
    except ProgrammingError:
        return False


def add_service_name_if_not_exists(apps, schema_editor):
    if not check_column_exists(apps, schema_editor, 'core_order', 'service_name'):
        schema_editor.add_field(
            model=apps.get_model('core', 'Order'),
            field=models.CharField(default='Custom Service', max_length=200, name='service_name'),
        )


def add_pricing_plan_name_if_not_exists(apps, schema_editor):
    if not check_column_exists(apps, schema_editor, 'core_order', 'pricing_plan_name'):
        schema_editor.add_field(
            model=apps.get_model('core', 'Order'),
            field=models.CharField(default='Custom Plan', max_length=200, name='pricing_plan_name'),
        )


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0016_remove_portfolio_video_file'),
    ]

    operations = [
        migrations.RunPython(add_service_name_if_not_exists),
        migrations.RunPython(add_pricing_plan_name_if_not_exists),
    ]
